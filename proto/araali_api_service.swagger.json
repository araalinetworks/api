{
  "swagger": "2.0",
  "info": {
    "title": "araali_api_service.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/addPodNameMappings": {
      "get": {
        "summary": "Add the Pod Name Mappings for given tenant",
        "operationId": "AraaliAPI_addPodNameMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/addUser": {
      "post": {
        "summary": "Add a user",
        "operationId": "AraaliAPI_addUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAddUserRequest"
            }
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/createFortifyYaml": {
      "get": {
        "summary": "Generate k8s workload/helm values (also registers workloadID)",
        "operationId": "AraaliAPI_createFortifyYaml",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceCreateFortifyYamlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workload_name",
            "description": "* Workload name - Unique name associated with workload. This is also the zone name - Cluster would show up on UI/Araali interfaces with this name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fog",
            "description": "* DNS of Fog that communicates with the cluster (Optional, take defaults if empty).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disable_upgrade",
            "description": "* Disable upgrade (Optional - false by default).",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "disable_enforcement",
            "description": "* Disable enforcement (Optional - false by default).",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "yaml_type",
            "description": "* Type of yaml file to generate.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "HELM_VALUES_FILE",
              "HELM_CONTROLLER_VALUES_FILE"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/createTenant": {
      "post": {
        "summary": "Add a tenant",
        "operationId": "AraaliAPI_createTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceCreateTenantResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/araali_api_serviceCreateTenantRequest"
            }
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/deleteFortifyYaml": {
      "get": {
        "summary": "Delete existing k8s workload",
        "operationId": "AraaliAPI_deleteFortifyYaml",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workload_name",
            "description": "* Unique ID associated with cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/deletePodNameMappings": {
      "get": {
        "summary": "Delete the Pod Name Mappings for given tenant",
        "operationId": "AraaliAPI_deletePodNameMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/deleteTenant": {
      "post": {
        "summary": "Delete a tenant",
        "operationId": "AraaliAPI_deleteTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/araali_api_serviceDeleteTenantRequest"
            }
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/deleteUser": {
      "post": {
        "summary": "Delete a user",
        "operationId": "AraaliAPI_deleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/araali_api_serviceDeleteUserRequest"
            }
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/getFirewallConfig": {
      "get": {
        "summary": "Get existing Araali firewall config",
        "operationId": "AraaliAPI_getFirewallConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceFirewallConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listAlerts": {
      "get": {
        "summary": "Get alerts",
        "operationId": "AraaliAPI_listAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListAlertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.open_alerts",
            "description": "* Fetch open alerts.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.closed_alerts",
            "description": "* Fetch closed alerts.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.perimeter_egress",
            "description": "* Fetch perimeter egress alerts.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.perimeter_ingress",
            "description": "* Fetch perimeter ingress alerts.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.home_non_araali_egress",
            "description": "* Fetch non araali egress alerts from private subnets.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.home_non_araali_ingress",
            "description": "* Fetch non araali ingress alerts from private subnets.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.araali_to_araali",
            "description": "* Fetch araali to araali alerts.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.list_all_alerts",
            "description": "* Fetch all alerts from all lenses, even ones not monitored by current user.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.time.start_time",
            "description": "* Start time to fetch from. Specify 0 to indicate beginning of time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.time.end_time",
            "description": "* End time to fetch up to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.zone",
            "description": "* Fetch alerts for given zone.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "description": "* Number of alerts to be returned each API call.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging_token",
            "description": "* Token to be sent in the next API call to retrieve the next set of alerts (paging).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listAssets": {
      "get": {
        "summary": "Get assets",
        "operationId": "AraaliAPI_listAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "description": "* Zone from which to return assets.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "app",
            "description": "* App/Namespace from which to return assets.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time.start_time",
            "description": "* Start time to fetch from. Specify 0 to indicate beginning of time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end_time",
            "description": "* End time to fetch up to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.list_active_vm",
            "description": "* Return active virtual machines.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.list_inactive_vm",
            "description": "* Return inactive virtual machines.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.list_active_container",
            "description": "* Return active containers.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.list_inactive_container",
            "description": "* Return inactive containers.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listFortifyYaml": {
      "get": {
        "summary": "List existing k8s workloads",
        "operationId": "AraaliAPI_listFortifyYaml",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListFortifyYamlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yaml_type",
            "description": "* Type of yaml to list.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "HELM_VALUES_FILE",
              "HELM_CONTROLLER_VALUES_FILE"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listInsights": {
      "get": {
        "summary": "Get tenant wide insights",
        "operationId": "AraaliAPI_listInsights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListInsightsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "description": "* Zone where insights are requested.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listLinks": {
      "get": {
        "summary": "Get links within a zone/app",
        "operationId": "AraaliAPI_listLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "description": "* Zone for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "app",
            "description": "* App for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "description": "* Required when zone and app are not specified. Must be in form of ip:port or fqdn:port.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time.start_time",
            "description": "* Start time to fetch from. Specify 0 to indicate beginning of time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end_time",
            "description": "* End time to fetch up to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listPodNameMappings": {
      "get": {
        "summary": "Get all the Pod Name Mappings for given tenant",
        "operationId": "AraaliAPI_listPodNameMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListPodNameMappingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "description": "* Only if interested in getting list a particular Zone.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/listPolicyAndEnforcementStatus": {
      "get": {
        "summary": "Download policy and enforcement knobs as code.",
        "operationId": "AraaliAPI_listPolicyAndEnforcementStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceListPolicyAndEnforcementStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "description": "* Id of the tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant.admin_email",
            "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone",
            "description": "* Zone to which container belongs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "app",
            "description": "* App to which container belongs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pod",
            "description": "* Pod to which container belongs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "container",
            "description": "* container name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    },
    "/api/v2/updateFirewallConfig": {
      "post": {
        "summary": "Update existing Araali firewall config",
        "operationId": "AraaliAPI_updateFirewallConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/araali_api_serviceFirewallConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/araali_api_serviceUpdateFirewallConfigRequest"
            }
          }
        ],
        "tags": [
          "AraaliAPI"
        ]
      }
    }
  },
  "definitions": {
    "AlertInfoStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATUS",
        "OPEN",
        "CLOSED"
      ],
      "default": "UNKNOWN_STATUS"
    },
    "AraaliAPIResponseReturnCode": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE",
        "UNKNOWN"
      ],
      "default": "SUCCESS",
      "title": "* Return status codes for the Araali APIs"
    },
    "AraaliUserRole": {
      "type": "string",
      "enum": [
        "ADMIN",
        "USER"
      ],
      "default": "ADMIN",
      "title": "* Enum for specifying the role of a user"
    },
    "AssetAssetMode": {
      "type": "string",
      "enum": [
        "TAP",
        "INLINE",
        "TRANSITIONING_TAP_TO_INLINE",
        "TRANSITIONING_INLINE_TO_TAP"
      ],
      "default": "TAP",
      "description": "* Mode the asset is in\n\t\tTAP    - Tap's into telemetry to discover policies (no enforcement).\n\t\tINLINE - Firewall embedded inline to enforce policies if needed (enforcement)."
    },
    "AssetAssetState": {
      "type": "string",
      "enum": [
        "DELETED",
        "ACTIVE",
        "INACTIVE"
      ],
      "default": "DELETED",
      "title": "* State of the asset"
    },
    "AssetAssetType": {
      "type": "string",
      "enum": [
        "UNKNOWN_ASSET",
        "VIRTUAL_MACHINE",
        "CONTAINER"
      ],
      "default": "UNKNOWN_ASSET",
      "title": "* Type of the asset"
    },
    "LensLensType": {
      "type": "string",
      "enum": [
        "UNKNOWN_LENS",
        "ZONE_APP",
        "SERVICE",
        "ZONE",
        "PROCESS",
        "CONTAINER",
        "TENANT"
      ],
      "default": "UNKNOWN_LENS",
      "title": "* Type of lens"
    },
    "LinkLinkDirection": {
      "type": "string",
      "enum": [
        "UNKNOWN_DIRECTION",
        "NON_ARAALI_INGRESS",
        "ARAALI_INGRESS",
        "NON_ARAALI_EGRESS",
        "ARAALI_EGRESS",
        "INTERNAL"
      ],
      "default": "UNKNOWN_DIRECTION",
      "title": "* Direction of the link araali-araali, araali-ingress etc"
    },
    "NonAraaliEndpointEndpointGroup": {
      "type": "string",
      "enum": [
        "UNKNOWN_GROUP",
        "WORLD",
        "HOME"
      ],
      "default": "UNKNOWN_GROUP"
    },
    "VulnerabilitySeverity": {
      "type": "string",
      "enum": [
        "NONE",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ],
      "default": "NONE"
    },
    "araali_api_serviceAddUserRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/araali_api_serviceTenant",
          "title": "* Tenant of the user being added"
        },
        "user": {
          "$ref": "#/definitions/araali_api_serviceAraaliUser",
          "title": "* Information required to create the tenant"
        }
      }
    },
    "araali_api_serviceAlertFilter": {
      "type": "object",
      "properties": {
        "open_alerts": {
          "type": "boolean",
          "title": "* Fetch open alerts"
        },
        "closed_alerts": {
          "type": "boolean",
          "title": "* Fetch closed alerts"
        },
        "perimeter_egress": {
          "type": "boolean",
          "title": "* Fetch perimeter egress alerts"
        },
        "perimeter_ingress": {
          "type": "boolean",
          "title": "* Fetch perimeter ingress alerts"
        },
        "home_non_araali_egress": {
          "type": "boolean",
          "title": "* Fetch non araali egress alerts from private subnets"
        },
        "home_non_araali_ingress": {
          "type": "boolean",
          "title": "* Fetch non araali ingress alerts from private subnets"
        },
        "araali_to_araali": {
          "type": "boolean",
          "title": "* Fetch araali to araali alerts"
        },
        "list_all_alerts": {
          "type": "boolean",
          "title": "* Fetch all alerts from all lenses, even ones not monitored by current user"
        },
        "time": {
          "$ref": "#/definitions/araali_api_serviceTimeSlice",
          "title": "* Time range in which to fetch alerts"
        },
        "zone": {
          "type": "string",
          "title": "* Fetch alerts for given zone"
        }
      },
      "description": "*\nFields to filter alerts in the ListAlerts API."
    },
    "araali_api_serviceAlertInfo": {
      "type": "object",
      "properties": {
        "communication_alert_type": {
          "type": "string",
          "title": "* Alert type"
        },
        "process_alert_type": {
          "type": "string",
          "title": "* Process alert type"
        },
        "re_open_count": {
          "type": "integer",
          "format": "int64",
          "title": "* Number of times transitioned from SNOOZED -\u003e ALERT"
        },
        "status": {
          "$ref": "#/definitions/AlertInfoStatus",
          "title": "* Whether OPEN or CLOSED"
        }
      },
      "title": "*\nAdditional information about alerts"
    },
    "araali_api_serviceAraaliAPIResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/AraaliAPIResponseReturnCode",
          "title": "* Success/Failure of API call"
        },
        "message": {
          "type": "string",
          "title": "* Custom message returned by the service if any"
        }
      },
      "description": "*\nGeneric API response object."
    },
    "araali_api_serviceAraaliEndpoint": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string",
          "title": "* Zone the endpoint belongs to"
        },
        "app": {
          "type": "string",
          "title": "* Mapped app the endpoint belongs to"
        },
        "unmapped_app": {
          "type": "string",
          "title": "* Original app/namespace the endpoint belongs to"
        },
        "namespace": {
          "type": "string",
          "title": "* Namespace of the endpoint"
        },
        "pod": {
          "type": "string",
          "title": "* Pod the endpoint belongs to"
        },
        "container_name": {
          "type": "string",
          "title": "* Container the endpoint belongs to"
        },
        "process": {
          "type": "string",
          "title": "* Process of the endpoint belongs to"
        },
        "binary_name": {
          "type": "string",
          "title": "* Binary name of the endpoint process"
        },
        "parent_process": {
          "type": "string",
          "title": "* Parent of the endpoint process"
        }
      },
      "title": "Represents an araali endpoint"
    },
    "araali_api_serviceAraaliFwKnobs": {
      "type": "object",
      "properties": {
        "install": {
          "type": "boolean"
        },
        "enable_process_vulnerabilities": {
          "type": "boolean"
        },
        "enable_container_vulnerabilities": {
          "type": "boolean"
        },
        "enable_flow_dedup": {
          "type": "boolean"
        },
        "enable_flow_rate_limit": {
          "type": "boolean"
        }
      }
    },
    "araali_api_serviceAraaliUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "* E-mail of the registering user"
        },
        "role": {
          "$ref": "#/definitions/AraaliUserRole",
          "title": "* Role of the registering user"
        },
        "is_site_admin": {
          "type": "boolean",
          "description": "* Enables role to have access to zone-apps\n\t\tTRUE  - Enable modify access to zone-apps\n\t\tFALSE - Enable read-only access to zone-apps."
        }
      },
      "description": "*\nUser object identifying the user in API calls."
    },
    "araali_api_serviceAsset": {
      "type": "object",
      "properties": {
        "host_name": {
          "type": "string",
          "title": "* Host name of asset"
        },
        "ip_address": {
          "type": "string",
          "title": "* IP address assigned to the asset"
        },
        "uuid": {
          "type": "string",
          "title": "* UUID if virtual machine or container-id if container"
        },
        "image": {
          "type": "string",
          "title": "* Container image or ami-id for virtual machines"
        },
        "zone": {
          "type": "string",
          "title": "* Zone the asset belongs to"
        },
        "apps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "* Apps the asset belongs to"
        },
        "state": {
          "$ref": "#/definitions/AssetAssetState",
          "title": "* State of the asset active, inactive etc"
        },
        "asset_type": {
          "$ref": "#/definitions/AssetAssetType",
          "title": "* Type of the asset"
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceVulnerability"
          },
          "title": "* Vulnerabilities in the asset"
        },
        "mode": {
          "$ref": "#/definitions/AssetAssetMode",
          "title": "* Visibility/Enforcement mode of the asset"
        },
        "os_name": {
          "type": "string",
          "title": "* OS name of the asset"
        },
        "iam_role": {
          "type": "string",
          "title": "* AWS IAM Role assigned to the asset"
        },
        "docker_privileged": {
          "type": "boolean",
          "title": "* Docker privilege assigned to the container (Docker containers only)"
        },
        "docker": {
          "$ref": "#/definitions/araali_api_serviceCapabilities",
          "title": "* Capabilities exported by docker"
        },
        "containerd": {
          "$ref": "#/definitions/araali_api_serviceCapabilities",
          "title": "* Capabilities exported by containerd"
        }
      },
      "description": "*\nRepresentation of container/virtual machine information."
    },
    "araali_api_serviceAssetFilter": {
      "type": "object",
      "properties": {
        "list_active_vm": {
          "type": "boolean",
          "title": "* Return active virtual machines"
        },
        "list_inactive_vm": {
          "type": "boolean",
          "title": "* Return inactive virtual machines"
        },
        "list_active_container": {
          "type": "boolean",
          "title": "* Return active containers"
        },
        "list_inactive_container": {
          "type": "boolean",
          "title": "* Return inactive containers"
        }
      },
      "description": "*\nFlags to filter assets in the ListAssets API."
    },
    "araali_api_serviceCapabilities": {
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "*\nList of capabilities"
    },
    "araali_api_serviceCreateFortifyYamlResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* CreateFortifyYamlResponse API call response"
        },
        "workload_yaml": {
          "type": "string",
          "title": "* Yaml formatted string response"
        }
      }
    },
    "araali_api_serviceCreateTenantRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/araali_api_serviceTenant",
          "title": "* Information required to create the tenant"
        }
      }
    },
    "araali_api_serviceCreateTenantResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* Success/Failure of the API call"
        },
        "tenant": {
          "$ref": "#/definitions/araali_api_serviceTenant",
          "title": "* Handle for the newly created tenant"
        }
      }
    },
    "araali_api_serviceDeleteTenantRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/araali_api_serviceTenant",
          "title": "* Tenant being deleted"
        }
      }
    },
    "araali_api_serviceDeleteUserRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/araali_api_serviceTenant",
          "title": "* Tenant of the user being deleted"
        },
        "user": {
          "$ref": "#/definitions/araali_api_serviceAraaliUser",
          "title": "* Handle of the user being deleted"
        }
      }
    },
    "araali_api_serviceEndPoint": {
      "type": "object",
      "properties": {
        "araali": {
          "$ref": "#/definitions/araali_api_serviceAraaliEndpoint",
          "title": "* Araali endpoint info"
        },
        "non_araali": {
          "$ref": "#/definitions/araali_api_serviceNonAraaliEndpoint",
          "title": "* Non-Araali endpoint info"
        }
      },
      "title": "*\nRepresents one end of a link/alert_counts"
    },
    "araali_api_serviceFirewallConfigResponse": {
      "type": "object",
      "properties": {
        "tenant_id": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "knobs": {
          "$ref": "#/definitions/araali_api_serviceAraaliFwKnobs"
        }
      }
    },
    "araali_api_serviceFortifyYamlType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "HELM_VALUES_FILE",
        "HELM_CONTROLLER_VALUES_FILE"
      ],
      "default": "UNKNOWN"
    },
    "araali_api_serviceInsight": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "* The kind of insight captured"
        },
        "url": {
          "type": "string",
          "title": "* The URL to view the insights"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "title": "* Number of insights"
        },
        "lens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceLens"
          },
          "title": "* The zone/app the insights belong to"
        }
      },
      "title": "*\nInstance of the insight Representation"
    },
    "araali_api_serviceLens": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/LensLensType",
          "title": "* Lens type"
        },
        "zone": {
          "type": "string",
          "title": "* Zone of the lens"
        },
        "app": {
          "type": "string",
          "title": "* App lens"
        },
        "pod": {
          "type": "string",
          "title": "* Pod of the lens"
        },
        "container_name": {
          "type": "string",
          "title": "* Container of the lens"
        },
        "process": {
          "type": "string",
          "title": "* Process of the lens"
        },
        "parent_process": {
          "type": "string",
          "title": "* Parent process of the lens"
        },
        "binary_name": {
          "type": "string",
          "title": "* Binary name of the lens"
        },
        "service": {
          "type": "string",
          "title": "* Service lens"
        }
      },
      "title": "*\nDrilled down entity/lens"
    },
    "araali_api_serviceLink": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/araali_api_serviceEndPoint",
          "title": "* Client endpoint"
        },
        "server": {
          "$ref": "#/definitions/araali_api_serviceEndPoint",
          "title": "* Server endpoint"
        },
        "direction": {
          "$ref": "#/definitions/LinkLinkDirection",
          "title": "* Direction of client-server link"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "* Timestamp when link was discovered"
        },
        "unique_id": {
          "type": "string",
          "title": "* Unique handle to the link"
        },
        "state": {
          "$ref": "#/definitions/araali_api_serviceLinkState",
          "title": "* State of the link alert, active/snoozed etc"
        },
        "ports": {
          "$ref": "#/definitions/araali_api_servicePorts",
          "title": "* Aggregated active/inactive ports"
        },
        "alert_info": {
          "$ref": "#/definitions/araali_api_serviceAlertInfo",
          "title": "* Additional information for alerts"
        },
        "policy_info": {
          "$ref": "#/definitions/araali_api_servicePolicyInfo",
          "title": "* Additional information for policy links"
        }
      },
      "title": "*\nRepresents an alert or policy link"
    },
    "araali_api_serviceLinkState": {
      "type": "string",
      "enum": [
        "BASELINE_ALERT",
        "DEFINED_POLICY",
        "SNOOZED_POLICY",
        "DENIED_POLICY"
      ],
      "default": "BASELINE_ALERT",
      "title": "*\nType of a link Alert or PolicyInfo"
    },
    "araali_api_serviceListAlertsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* ListAsset API call response"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceLink"
          },
          "title": "* List of alerts"
        },
        "paging_token": {
          "type": "string",
          "title": "* Token to be passed to the next API call (indicating there are more alerts to be retrieved)"
        }
      }
    },
    "araali_api_serviceListAssetsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* ListAsset API call response"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceAsset"
          },
          "title": "* List of assets"
        }
      }
    },
    "araali_api_serviceListFortifyYamlResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* ListWorkloadResponse API call response"
        },
        "workloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "* List of workloads"
        }
      }
    },
    "araali_api_serviceListInsightsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* ListInsights API call response"
        },
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceInsight"
          },
          "title": "* List of insights"
        }
      }
    },
    "araali_api_serviceListLinksResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/araali_api_serviceAraaliAPIResponse",
          "title": "* ListLinks API call response"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_serviceLink"
          },
          "title": "* List of links"
        }
      }
    },
    "araali_api_serviceListPodNameMappingsResponse": {
      "type": "object",
      "properties": {
        "pod_name_mapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/araali_api_servicePodNameMapping"
          },
          "title": "* one or more mapping of ephemeral pod_names"
        }
      }
    },
    "araali_api_serviceListPolicyAndEnforcementStatusResponse": {
      "type": "object",
      "properties": {
        "policy_and_enforcement_yaml": {
          "type": "string",
          "description": "* Policies represented in yaml format."
        }
      }
    },
    "araali_api_serviceNonAraaliClientEndpoint": {
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/araali_api_serviceSubnet",
          "title": "* Client subnet"
        }
      },
      "title": "Represents a non araali client endpoint"
    },
    "araali_api_serviceNonAraaliEndpoint": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/araali_api_serviceNonAraaliClientEndpoint",
          "title": "* Non araali client"
        },
        "server": {
          "$ref": "#/definitions/araali_api_serviceNonAraaliServerEndpoint",
          "title": "* Non araali server"
        },
        "endpoint_group": {
          "$ref": "#/definitions/NonAraaliEndpointEndpointGroup",
          "description": "* WORLD if public subnet. HOME if private subnet."
        },
        "organization": {
          "type": "string",
          "title": "* Autonomous System Organization of the IP address if available"
        }
      },
      "title": "Represents a non araali endpoint"
    },
    "araali_api_serviceNonAraaliServerEndpoint": {
      "type": "object",
      "properties": {
        "dns_pattern": {
          "type": "string",
          "title": "* DNS/FQDN of endpoint"
        },
        "subnet": {
          "$ref": "#/definitions/araali_api_serviceSubnet",
          "title": "* Server subnet"
        },
        "dst_port": {
          "type": "integer",
          "format": "int64",
          "title": "* Service destination port"
        }
      },
      "title": "Represents a non araali server endpoint"
    },
    "araali_api_servicePodNameMapping": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string",
          "title": "* Zone to which pod belongs"
        },
        "app": {
          "type": "string",
          "title": "* App to which pod belongs"
        },
        "pod_name_regex_pattern": {
          "type": "string",
          "title": "* Regex pattern identifying the pod"
        },
        "translated_pod_name": {
          "type": "string",
          "title": "* Pod name to use"
        }
      }
    },
    "araali_api_servicePolicyInfo": {
      "type": "object",
      "properties": {
        "template_name": {
          "type": "string",
          "title": "* Template name used to validate the link"
        },
        "template_user": {
          "type": "string",
          "title": "* User who created the template to validate the link"
        },
        "policy_skip_reason": {
          "type": "string",
          "title": "* Reason for skipping policy evaluation at agents when enforced"
        }
      },
      "title": "*\nAdditional information about policy"
    },
    "araali_api_servicePorts": {
      "type": "object",
      "properties": {
        "active_ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "title": "* Active aggregated ports in the link"
        },
        "inactive_ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "title": "* Inactive aggregated ports in the link"
        }
      }
    },
    "araali_api_serviceSubnet": {
      "type": "object",
      "properties": {
        "subnet": {
          "type": "string",
          "title": "* Client subnet"
        },
        "net_mask": {
          "type": "integer",
          "format": "int64",
          "title": "* Client netmask"
        }
      },
      "title": "*\nRepresents the subnet/mask"
    },
    "araali_api_serviceTenant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "* Id of the tenant"
        },
        "admin_email": {
          "type": "string",
          "description": "* Admin e-mail of the tenant.\n Also adds an ADMIN role user in this tenant."
        }
      },
      "description": "*\nTenant object identifying the tenant in API calls."
    },
    "araali_api_serviceTimeSlice": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "format": "date-time",
          "title": "* Start time to fetch from. Specify 0 to indicate beginning of time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "title": "* End time to fetch up to"
        }
      },
      "description": "*\nObject for specifying start and end time in varous API calls."
    },
    "araali_api_serviceUpdateFirewallConfigRequest": {
      "type": "object",
      "properties": {
        "tenant_id": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "knobs": {
          "$ref": "#/definitions/araali_api_serviceAraaliFwKnobs"
        }
      }
    },
    "araali_api_serviceVulnerability": {
      "type": "object",
      "properties": {
        "package_name": {
          "type": "string",
          "title": "* Package name with the vulnerability"
        },
        "cve_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "* CVE id of the vulnerability"
        },
        "severity": {
          "$ref": "#/definitions/VulnerabilitySeverity",
          "title": "* Severity of the vulnerability"
        }
      },
      "title": "*\nCaptures an instance of vulnerability package name, cve info etc"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
